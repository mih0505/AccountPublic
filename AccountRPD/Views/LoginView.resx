<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABMGQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAGRNJ
        REFUeNrt3cmPHGl+3vHv+0bkvmdlrSyS3Rz2xpnumWmooRnJhg3oJkMyYF0Ggg1dRpBhGb5YI7TOPniM
        af8BhtqAfbLgu+2b4ZENAzOGbHnUarV72N0km0uxNtaaa0S8PkRmcSdrZUZUPB+guotEMfPNrIwn3veN
        X7wviIiIiIiIiIiIiIiIiIiIiIiIiIiIiIhImphpN+BJH/7kYwALXAOujP/aTbtdcuoMEGDYB24BN4Ho
        x3/0w2m3K1P8aTfgBe36AfAHxAd/NO0GyamzQJf4wP8PwL8Heh9+9DEACoJXI6kBYIAa0Jl2Q+RMRTja
        QH/cF/0vxIEgr4iddgMk0yxx0H8f+EfArxGHvjfpCcjZUgBIElRxXCMe8v0uUJ12g7IiqUOA53LOEYaa
        EkgTaw3WvvBcY4A68D4wAraBn3740cc3QPMBZyl1AZDzfaqVHMYk7gKGPMdoFDAYjl72YxZHDfgAc9AD
        2AD2P/zoY10dOCOpCoAwjFhemOX771+jWi6qJ5Bwk5D+9PpN/vcnv2QUhFj70uCu4XgH+IcYGsB/BFam
        /VrOq1QFgHOOWqXEm5cvUK2Upt0cOaTNrR2MMTgchyg9sUAdw68COZxbA/78w5/86T0g+vGPfn/aL+dc
        0SSgTI21hmIhTz731HnI4Kjh+DbwT4C/BxRwjg8/+hhdITg9CgCZiiiKqJSKvPfm61y5uIhvLc49VfBZ
        B/MemN/BmN/D2svTbvd5owCQqYgiR6lY4J2rl7h29TILc22KhfyTPxYPB1QncGYUADIVDvCspVop89aV
        Zb73nXdYmG1jrX3WLIHqBM5IqiYB5TxxYMDzLPVqhSsXF+n1h3jWcntljcFw9OilXtUJnBH1AGR6Hhny
        16tlvvXm63z77SvMthsU8k/VetjxxOAHwD8G/g5xGbHVcOD41AOQRPA8j1q1xJVLS4DhF599yVd3Vp41
        Mag6gVOkAJDE8Kyl1ajy5usXGI1GhGHIyvoDeoMhj3QGHq8TgHXgzz/86OO7aD2BI9MQQBLFs5Zapcy1
        Ny7zK++9RaddJ+c/9TF9tE7gD5nUCYDqBI5IPQBJHM+zNGoVXlueZzgc8en1m9y4vcIoDJ+cF6jjeBf4
        BxgMWk/gyNQDkESy1tKsVbl29TLvXL30ojoBrSdwAgoASSzPs1SrJd66clF1AmdEQwBJNM9amvWq6gTO
        iHoAknietaoTOCPqAUgqqE7gbCgAJDVUJ3D6NASQVFGdwOlSD0BSR3UCp0c9AEkl1QmcDgWApJbqBE5O
        QwBJNdUJnIx6AJJ6qhM4PvUA5FxQncDxKADk3FCdwNFpCCDniuoEjkY9ADl3VCdweOoByLmkOoFDvk/T
        boDIWVGdwMtpCCDnmuoEXkw9ADn3VCfwfOoBSCaoTuDZFACSGaoTeJqGAJIpqhN4nHoAkjmqE3hIPQDJ
        JNUJPHyBIpmkOgENASTjsl4noB6AZF6W6wTUAxAhu3UCCgCRsSzWCWgIIPKIrNUJqAcg8oQs1QmoByDy
        DFmpE1AAiDxHFuoENAQQeYHzXiegHoDIS5znOgH1AEQO4bzWCSgARA7Js5Z2o0bhGz5hFOJwrKxv0u0P
        4GEOpKpOQAEgU2JwQBiGAATj/6dBPp/j6uULWGvp/eWAfn9IxGM9gbhOAL6N4Q+BCvDvgGjabX+SAkCm
        wrOG3b0u/+Mv/ppapUwUJe7YeC5jIAwjdva67HV7ONzzfrSB4z3gdRI636YAkKmw1rLf6/N/Pr0+7aYc
        y2T674mJwGf9WJW4B5BICgCZKnPyh5ATUADIVL3kDCpnLJHjEhF5NdQDkDMXRY4gCAmCEGfdyR8woTzP
        pq5HowCQMzfTqvOtN19jFIRYm64D5DCMMYyCgHtrm+zudVMVAgoAOXNXLy1xcWF22s04M77nsb27z3/6
        6c/Y2tnD97xpN+nwbZ92A+T8y+V8crnz/VELwjA+8FM2wtEkoEiGKQBEMkwBIJJhCgCRDFMAiGSYAkAk
        wxQAIhmmABDJMAWASIYpAEQyTAEgkmEKAJEMUwCIZJgCQCTDFAAiGaYAEMkwBYBIhikARDJMASCSYQoA
        kQxTAIhkmAJAJMPO91rNZ8A5R5iirayzxLPp25ln2hQAR7S6scX//exLev0B1qoDlQRRFFEqFvj221eY
        77Sm3ZxUUQAc0eb2Lj/7xWdsbe/h++nZAeY8C4KQZqPKxcVZBcARKQCOwTzyJdOn38XxKQCOwRhz8CXT
        p9/F8WkQK5Jh6gEckXOOcLzXvSRDEISEQYhzKduZMwEUAEdUr5Z55xuX2Ov28Tx1oJIgDCOq5SL1anna
        TUkdBcARLcy2+c2/+6s62ySMMYZCITftZqSOAuCIfM/DL+vyn5wP6sOKZJgCQCTDFAAiGaYAEMkwBYBI
        hikARDJMASCSYQoAkQxTAIhkmAJAJMNUCnxEm9u7fHHrLoPBCGt1D/qLuPF/luZnuHxhHqt79hNHAXBE
        qxtb/Nf/+Zds7WhJsJdxzuGAX3//m1xcnMV6er+SRgFwRFEUMQxGDEYjQqfVgV9kEgBBqLUTkkoBcETG
        GKy1eOMveb5JAGi5ruTSJ1gkw9QDOCLnHEEQMAoC4vObPM+kBxBpI5XEUgAcUalQ4MJ8h3qljKdJrRea
        rJrUqlcxWrg7kRQAR7Q4P8Nv/cavEYahxraHVCkVtYtSQikAjqiYz1GcaU67GSKnQrEskmEKAJEMUwCI
        ZJgCQCTDFAAiGaYAEMkwBYBIhikARDJMASCSYQoAkQxTAIhkmAJAJMMUACIZpgAQyTAFgEiGKQBEMiyp
        C4I4YBdYH38fjf/SedYWjTF1FF4iJ5bUAAiAPwN+Pv6zc0C31x9evbz0twqF3D8FmtNupEjaJS4Afvyj
        H0J8xv9k/AU8XGASyAODabdT5Dw4tQD48CcfT76148c91RUz//m//Df86z/5g8Fet5crFvKv7h2SV8Jg
        sNZoodVX7Cx6ANeAHwBtYHRaD5rP+fzxv/rTcHlx9uqlxbma73uP9gokxXzPUq9VePvKRWaa9Wk3J1PO
        IgBeB34IzJ/2A3ue5e7qBnfur5/5GyOvTrVc4vKFeS4uzCoAXrHEzQG8jDqI54cb7x/erFe5tDRHpVyc
        dpMyJ3UBANps8vxwGGNo1StcWpylUlIAvGqpDAA5H6wx5HI+rXqN+U4LTe6+eiqmkalwzuH7Pp1Wg3az
        RiGfm3aTMimxPQDnHM5xrB14DYbJKOEow4WTPOdRWXO8S15xG0+3hcYY7CseVjnnyOd9luY6dJoNrNG5
        aBoSGwDW2mN/MOMDJD5Eoujwh4q19tgH5lFFUXSsA9laG18vP8Xp0Mi5V76Ft3OOYi7H8sIMnXYdTetM
        R+ICwDmHtZaluTbLCx1ajRr5XO5Q1/yNMfQHQ7Z29+j2Bmzv7HF3dZP+cIQ3DpRnfdAi58jnfC4uzrI0
        16ZZq+J5Z1NnYIwhDCO+/PoeN+7cZzAYEh3yeaIoYm6mxTtXL1GvlLH2ZEfNJOi+vHWPT7+4RRCGr6wn
        4Hs+lXKJ2ZkW9WpFE7tTksAAiD+Ys+0G37x6mYtL80eaHOr1B6xtbrO732Vtc4tcLsfG1g6D4YjhKCCM
        oqfOnc45fM/jwtwM7771OktzHXzfO7PXGIYRYRiysrbBcDjCRdGhDoDIOVr1Ku9fu8rcTPPUttx2zvHZ
        l1/HgXfGB6IjHv5USkXazTr1ahnPU/d/WhIXACdVyOdZ6LSYbTdYXpjl6mvL3Lpzn8+/vM3XK+vsdXuY
        E545p8lYQ873T+3gf+VcfOmv02pwYb5DIX/uPoKpktx333GsiS5rDfnxjHKpWKBRq1AuFCjk8/g5j9v3
        1tjt9gjDp8+6kwm2JDPGpPqMOenhddp1lhdmyOc0+z9NyQ2AJzggDEOCICQMQ551nJrxBJ7ve3jWjicS
        od2sUS7l8cZn/us37xKEw5dOoznnGI2fLwyPP0mW8z3y+dzJx7ku7j773sPhSRRFBEHIcBQc6iF8z6NQ
        OIW2HJMxkMv5zLTqzHda5HOp+QieS6l598Mg5M79dW7euc/t++uMRsFjH2JjwPM8mrUKFxY6LM93aDfr
        TIqH87kcry0vsN8bcHtlnf5g+NLn7A+GfHV7hVt3V1nb3CY65Fh9YtKbeOPyBd57+wrlUvFEE3cOHgu+
        KIro9gZ8fuM2n15/+SReGEZcvjDP99+/RmkKRTfOOQr5HJ1WnVa9SrGQ1+TflKUmACIXsbO3x6179/mb
        61/THwwfGwc/GgAPtnfZ2e2yvDjLfKdJqVjAWkuzXmVxrsVcu85wNKLXf3EIjIKQ9c0tvrh1l1t3VuMJ
        xGMEQKlQ4O1vXKJccpzkboac75HLeQcPEUWO/mDI3fsbfPL5V4xGwQvnBoIgBOCD996Cwln/xp71fkC5
        WGRprkOjVtXBnwCpCQAwGGPxrIfve/ih99SH3RjDzn6Pz2/c4c79DS7dn+N733mHpfnOQVezVqnw2vIi
        e70B3d4GLzogDfF1d8+z+L6HiY5WIzAJAOud7IPuHHjWUCzmKRcLB2d5hyMIgoOrGJNLqC/ieXZqN1Q5
        HOVygYtLszRqlSm1Qh6VogB4OTcuaAmCgMFwhO973F5Zo1wqMttuYIyhWMjFcwLFySkw2ZN+B200lrzn
        k/cfrrXiHARhRHhQxJPsM6pvLfVKmcXZNrVKadrNEc7hvQDGGKy1OOfo9gasrG3yYGf3YOzsex6VUjF1
        k0/GQC7vk8v5B5fqnXMMR8FB1z6p4p6JoVop0WrUaNaqj01kyvScuwA4YAxhFLK9t0+312dypjfjWfS0
        XUc3xlAq5ikVH06cRVFEr99nMBzGry6hHQAHeNZjrtNivtM60yIrOZp0HQVH5By4yD02cz7pIaRpAsq5
        +AanUqFAqVB4GADOMQwCgjAkyUMZF8U9gMVOi8XZNl7Kwvc8O7+/CRcXBRUKeXL+w+6+cy6uIzjCTULT
        5zAGCvncY9fwnXOMRpMASGwHYNx2n7mZFp12A5viQqbzJl0D4SNwzmGNpVouUSrmmRweoyBgr9tnMDq1
        9UpficnQxfe8gwM9HgIMGA6DJHcAKBbztJp1mo3qI5OvkgTnKgAevb02l/No1soszc3QqtcOJs6Gw4DN
        7R16/cnWAoZEHz3j1hljKJeKlEvFgx5AGEbs7ffp9oeJfQXOQa1SZnF2hmpZM/9Jc64CYDKxZ62lXa9w
        +cI8Vy4uMtN6uNJsfzBgfXOb/V4fzPiu+qQePRPjEuBGrUKjVjmoJgzDaDzJ2WOyvl6STOogGrUKF7Xm
        XyKlKAAczkWEUcgoCBkFD6venHN4nkejWqZerdCsV7i0OMdrywvUxwUnk0tmG1u73Ft7wN5+P7Fj5qde
        eTwL+NRVgOFoxO5+j15CewDxvRmWZq3KhbkZdf8TKDUBEF8GKzLTanBxoc9gODo4E8bry3nMNut02g1m
        Wg2WFx9fY34UBKysbfL1vTU2t3cZjEapmY32PEshl6OYz5P3czgcYRix3x/Q7Q8YBWHiLq05F7e7UirG
        1/4btcS1UVIUAL7nsbwwS6fV4LvX3njqtl1j4p/J+T4533+s0CeMInb3unz2xS1+eeN23HtIWHf5RUqF
        PO1GjXKpcDBlsbvfY2t7L74CkMCX4ohXWVqca9Np1fE1859IqQmAuIw3f6TVgSLnGA5HrG5u8dXX9/jy
        63tsbu8e+a6+aXJAuVSk06o/9tq7/R47e3vxugYJTIAoisjnfC7MzdBp1VMVuFmSmgA4rMi5g9LYwWDI
        2oNtPv/qNp99cYsH23uMRsk8Yz7LZOecSrlIp92gMA4A52C/12d7r0sYholcUHMS2EvzM7QbD2/LlmQ5
        dwGw3+1xZ2Wd/W6f7b19bt1bZW0jXiMwCKOUfQ7HtxMXC7SbdQoHq+c4dne7bG7uMArCM1/H7zhKhTyt
        epV2fTx0kURKTQBEkWO/12Nnr8tet0cYuqc+98YYtnf3uHV3lb1uj739Hqsb2+MJQ5vE4+TFTPyaquUi
        nWb9YPOM4XDEg519NrZ3CYIwUZk2uSW5UaswN9OkpP3+Ei01ARCGIXdW1vmbL25x/dZd+oPRM1fXiSJH
        GAZEUby+Xxi51K6hZ42lkPfHlzbjWfQgCNne3Wdza4ftvS7OJev6/6RoKV70c/aRXoskUWoCwOEYBSP2
        e/Hs95MrAk2Y8VlzcrpP6+RT5BylfI6l2XgSzffj19ofDll7sMXO/mT8/2o2Mjm0cdFSp9VgaW4mdbdd
        Z02KfjsvXxHoPJmsn7e82GG23TgItP1un9sr6+zudTHGJm5Ow/ctlUqRdrNGq1nT5b+E028noZxz5Pz4
        DrpmvXpwnG/v7vPV7fs82NmLezvTbugTbS4WCix22jRrFR38KaDfUEJNZtE7zTq1conIObZ39ljbeMCD
        7V36w5evavyqRZGjXCxwcXGWZr067ebIISgAEmYyqTfTqLG80KFeq2KsJQxC7q6uc2d1I94DIIHF/8ZC
        tVLkwnyHerU87ebIIaRoDuA8G9/dF8V7BuY8n4W5NlcvL1EuxcU/vcGQ67fu8cXNu/T7Q8IwOtLOx8B4
        U5XoqeyIorh4KhiF4HOsS6bGGIq5PI1qlU6rSVl3/qWCAiABJjczLc61qZZL5HM+b752kcXZGXJ+fBnN
        WkOtUmZ5cZYLC8d7nsnGIE/elDPTqvOtN18jCEN6/SFrm1v0j7BrcXw3ZrzvQqddPwgtST4FQAJEUUQh
        V+T9b77BO1cukc/5FPI5fN87qHWolIp87zvv8CvfevNEz+V73kFB0cTVS0tcXJjF8yxf3rrHT3/+C1bW
        HxAFh9tuzDmHZz0WO20WO208rfibGgqABHDEu/6Wi0Xq49nzJ6/tW2vjm4HOoKo2l4uXGwcolwr4njnS
        EGBy6+/CXJuF2XZqC6+yKLm/qWdc4nqkvudsnvI5RTUnf8pDFOs4iKKQKJzuGv9P7j94GP74vv9OK173
        L63FV1mkHsCL6HN8KJVyiflOk1q1nJpFViSWuAAwJh5Trm1u89fXb3J3bZNCPs9oNGJ1Y4u1zR2i6HTr
        340xBGHIndUNHI5bd1fxfZ9ur8+d++vs7HUn24oc9ZEBx+rGA/7ik/9HqVjAs5YgjLh5d5X+MN7Xzzzx
        T+KzsGN7d58bt1fY7/ZPtKvws8RFO3nmOy1ajdqx1uub3K5cr5W5sNChWtKin2mTwAAwOOe4u7rJvbUH
        j3UnnXNEzp36DTDWGIIg5Mbt+9y6s/rYY0dRdLDa8NEvjQEYbq+sc3d147GFOx593GclQBRFrG9u8d//
        119xb3Xz1JfTCsOIdrPGB+++wVtXLlEuFo71nprxYqXLC7O67TeFEhcAE/EBEt8ENGHGq/ie1c0vURQR
        PvGcdrJy8AmeM4oiwtA9dv3dHuImnsnOP4PRiNBFnKYwjBiORoTjIDoOaw0536dVrzE/0zrSak2SDIkN
        gHhCDl7lQPysnvO4d+wZDJ61B1+nyoE33iLtONk2qV1o1qu0GzUq5WKy7kqUQ9GMjRyLc45CLsfyfIdO
        q5HIdQnl5RQAcixR5MjnciwvdOi06+lbbUkABUDCTOYbOFgO7IyfbjyvcvTn8X2PSrnIfKdJs1ZR9z+l
        EjsHIMnkxrsuV8tFOu061WpZpb8ppgBIAGsMoyDg+s07dHt9PM/inGP9QbyJ6WnXAEB85h8MR9y8c5/+
        YEitUsb3PFY3ttjZ7xFGz7vq4DAYWo0ai7NtinnN/KeZAiABrLUMRwF/9flXfPLLGwdd8rjmITqTpc+s
        NfT6Qz6/cZdf3rx3MAhwzsWXYJ/z7+L7Fmy85t98h3xeH6E0028vQcIwemyLcwNnvu5hEITj5xvXOhrz
        wlp+A+R8j5lWnYXZFnlfq/6mWeoCYFINmAUOXtAVP6PndI7wOe/vZKHSZr1Cu1FT6e85cBYBEAGD8feD
        kzzQs1hrbc5aH92q88pFztGoVri4OEdjvO26pNtZBMCnwL8AasCp3ts6HAWjd9987bvfuLT0A9/3asct
        YZXjmaz6227W6LQa026OnIJTC4Af/+iHk2+/Aj4+7YY+crD/FvDbxAEjIiegQiCRDEvcJOCHP/kYwAN+
        Hfju+K/dn3z0b+n2BqPf/o3vf/dvf/BuWVtOiZxcUo8iH/j7wD8jngyPAPI5n7ur63Y4GvkKAJGTS/JR
        5D+rfc6RyE0xRNJIcwAiGaYAEMkwBYBIhikARDJMASCSYQoAkQxTAIhkmAJAJMMUACIZpgAQyTAFgEiG
        KQBEMkwBIJJhCgCRDFMAiGSYAkAkwxQAIhmmABDJMAWASIYpAEQyTAEgkmEKAJEMUwCIZJgCQCTDkrwx
        yFOMMezu9/j85h2q5SJhGE27SSJ4nmWv22d3v4cx6dq1PlUB4HmWlbVN/vN/+1nq3mg535xzDAYjPC9d
        nepUBQDAKAjoD4bTbobIUzzPpu7ElLoAMMbg+960myFyLqSrvyIip0oBIJJhSR0COGAXWB9/r+l+SSML
        GOLPciI3tU9qAATAnwE/H/85kW+eyEtMZgS/JP5Mi4iIiIiIiIiIiIiIiIiIiIiIiIiIiIiInMj/Bxfi
        OzCm6P4IAAAAAElFTkSuQmCC
</value>
  </data>
</root>