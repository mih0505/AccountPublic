@model Accounts.Models.TutorViewModel

@{
    ViewBag.Title = "Редактировать запись";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.FacultyId, "Факультет", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FacultyId", null, htmlAttributes: new { @class = "form-control", @id = "faculty" })
                @Html.ValidationMessageFor(model => model.FacultyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "Куратор", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserId, new SelectList(Model.TutorsList, "Id", "Name"), htmlAttributes: new { @class = "form-control", @id = "UserId" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroupId, "Группа", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GroupId, new SelectList(Model.Groups, "Id", "Name"), htmlAttributes: new { @class = "form-control", @id = "GroupId" })
                @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад", "Index")
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#faculty").change(function () {
                $("#GroupId").empty();
              $.ajax({
                  type: 'POST',
                  url: '@Url.Action("GetGroups")',
                  dataType: 'json',
                  data: { id: $("#faculty").val() },
                  success: function (groups) {                      
                      $.each(groups, function (i, group) {
                          $("#GroupId").append('<option value="' + group.Value + '">' + group.Text + '</option>');
                      });
                  },
                  error: function (ex) {
                      alert('Не удалось получить список группы.' + ex);
                  }
              });
              return false;
          })
        });

        $(document).ready(function () {
            $("#faculty").change(function () {
                $("#UserId").empty();
              $.ajax({
                  type: 'POST',
                  url: '@Url.Action("GetUsers")',
                  dataType: 'json',
                  data: { id: $("#faculty").val() },
                  success: function (users) {                      
                      $.each(users, function (i, user) {
                          $("#UserId").append('<option value="' + user.Value + '">' + user.Text + '</option>');
                      });
                  },
                  error: function (ex) {
                      alert('Не удалось получить список пользователей.' + ex);
                  }
              });
              return false;
          })
      });
    </script>
}